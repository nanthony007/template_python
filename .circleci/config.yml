version: 2.1
description: 'Deploying heroku-circleci-docker-fastapi to Heroku'

jobs:
  # Code Linting
  lint:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install Poetry
          command: |
            pip3 install poetry
      - run:
          name: Install Python Dependencies
          command: |
            poetry install
      - run:
          name: Format Code
          command: |
            poetry run black . --target-version py38
      - run:
          name: Format Imports
          command: |
            poetry run isort .
      - run:
          name: Lint Code
          command: |
            poetry run flake8
  # API Tests
  test:
    docker:
      - image: circleci/python:3.8
        user: root
    steps:
      - checkout
      - run:
          name: Install Poetry
          command: |
            pip3 install poetry
      - run:
          name: Install Python Dependencies
          command: |
            poetry install
      - run:
          name: Run Tests
          command: |
            poetry run pytest --color=yes
  # Build Docker Container And Deploy To Heroku
  docker-build-release:
    machine:
      enabled: true
    parameters:
      app-name:
        description: 'python-sample projet'
        type: string
      app-type:
        description: 'Python web application'
        type: string
        default: 'web'
    steps:
      - checkout # Checkout code from github repository
      - run:
          name: Install Heroku CLI
          command: |
            curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: Login into Heroku Docker Repository
          command: |
            docker login --username=$HEROKU_EMAIL --password=$HEROKU_API_KEY registry.heroku.com
      - run:
          name: Verify Container Login
          command: |
            heroku container:login
      - run:
          name: Build Docker Container
          command: |
            docker build --rm=false -t registry.heroku.com/<< parameters.app-name >>/<< parameters.app-type >> .
      - run:
          name: Push Container To Heroku
          command: |
            docker push registry.heroku.com/<< parameters.app-name >>/<< parameters.app-type >>
      - run:
          name: Release Deployed Container
          command: |
            heroku container:release << parameters.app-type >> -a << parameters.app-name >>
machine:
  services:
    - docker

dependencies:
  cache_directories:
    - ~/docker

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - lint # Linting is run for every branch.
      - test # Tests are run for every branch.

      # Staging [branch=staging]
      - docker-build-release:
          requires:
            - lint
            - test
          app-name: '${APP_PREFIX}-staging'
          filters:
            branches:
              only: staging # Only run this build and deploy for staging branch.

      # Production [branch=master]
      - docker-build-release:
          requires:
            - lint
            - test
          app-name: '${APP_PREFIX}-production'
          filters:
            branches:
              only: main # Only run this build and deploy for master branch.
